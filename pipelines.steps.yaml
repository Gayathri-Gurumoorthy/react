pipelines: 

## Using NpmBuild step will fail due to issue https://jira.jfrog.org/browse/RTDEV-25641
  #     - name: npm_build_install
  #       type: NpmBuild
  #       configuration:
  #         resolverRepo: pe-npm
  #         sourceLocation: .
  #         integrations:
  #           - name: artifactory
  #         inputResources:
  #           - name: pe_source_code
   
  #     - name: npm_build_publish
  #       type: NpmPublish
  #       configuration:
  #         deployerRepo: pe-npm-local
  #         integrations:
  #           - name: artifactory
  #         inputSteps:
  #           - name: npm_build_install
  #         outputResources:
  #           - name: npm_app_build_info

  - name: npm_app_pipeline
    steps:    
      - name: bash_npm_build_publish
        type: Bash
        configuration: 
          environmentVariables: 
            buildName: bash_npm_build_publish
            buildNumber: "1.0.${run_number}"
          runtime:
            type: host
          integrations: 
            - name: artifactory
            - name: pegeneric
          inputResources:
            - name: pe_source_code
          outputResources: 
            - name: npm_app_build_info
        execution: 
          onExecute: 
            - printenv int_pegeneric_user
            - printenv int_pegeneric_password
            - printenv int_pegeneric_server
            - git clone https://github.com/davidpinhas/simple-reactjs-app.git
            - cd simple-reactjs-app
            - bash artifactory-config.sh
#            - if ! grep $int_pegeneric_server  ~/.jfrog/jfrog-cli.conf.v5; then jfrog config add $int_pegeneric_server --artifactory-url https://$int_pegeneric_server.jfrog.io/artifactory --user $int_pegeneric_user --password $int_pegeneric_password --interactive=false; fi
            - jfrog rt npm-config --server-id-resolve $int_pegeneric_server --server-id-deploy $int_pegeneric_server --repo-resolve pe-npm-remote --repo-deploy pe-npm-local
            - jfrog rt npmi --build-name=npm-app --build-number=1.0.${run_number}
            - jfrog rt bag npm-app 1.0.${run_number}
            - jfrog rt bce npm-app 1.0.${run_number}
            - jfrog rt bp npm-app 1.0.${run_number}
            - add_run_variables buildName=${JFROG_CLI_BUILD_NAME} buildNumber=${JFROG_CLI_BUILD_NUMBER}
            - add_run_variables myEnvironmentVariable=${run_id}
            - $jfrog_cli_path rt build-collect-env
            - add_run_files /tmp/jfrog/. jfrog

      - name: npm_publish_buildinfo
        type: PublishBuildInfo
        configuration:
          environmentVariables:
            buildStepName: bash_npm_build_publish
          inputSteps:
            - name: bash_npm_build_publish
          runtime:
            type: host
          outputResources:
            - name: npm_app_build_info

      - name: npm_app_scan
        type: XrayScan
        configuration:
          failOnScan: false
          inputSteps:
            - name: npm_publish_buildinfo
          inputResources:
            - name: npm_app_build_info

      - name: promoteNpmBuildStep
        type: PromoteBuild
        configuration:
          targetRepository: pe-prod-npm
          includeDependencies: true
          copy: true
          integrations:
            - name: artifactory
          inputResources:
            - name: npm_app_build_info
              trigger: false
          outputResources:
            - name: npm_app_build_info_propoted_prod
        execution:
          onSuccess:
            - write_output npm_app_build_info_propoted_prod version=${appVersion}
            - jfrog rt sp --build=${res_npm_app_build_info_buildName}/${res_npm_app_build_info_buildNumber} pe-npm-local/ "app.version=${appVersion}"
