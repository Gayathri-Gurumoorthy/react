replicaCount: 1

containerPort: 3000
containerPortHttps: 8443

image:
  registry: davidp-pe-docker.jfrog.io
  repository: davidp-pe-docker.jfrog.io/pe-node-web-app
  tag: latest
  pullPolicy: IfNotPresent

# imageCredentials:
#   name: regcred
#   registry: davidp-pe-docker.jfrog.io

imagePullSecrets: regcred
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# service:
#   type: LoadBalancer
#   port: 80
#   portHttps: 443

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

runtime:
  k8s_integration: davidp_k8s
  namespace: davidp-webapp
  blueReleaseName: app-blue
  greenReleaseName: app-green
  idleServiceName: app-idle
  liveServiceName: app

service:
  type: LoadBalancer
  port: 80
  portHttps: 443
  internalPort: 3000
  externalPort: 80
  externalTrafficPolicy: Cluster
